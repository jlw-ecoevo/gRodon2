geom_boxplot(width=0.03,fill=rgb(0,0,0,0),color="white",outliers=F) +
theme_pubclean() +
scale_y_log10() +
xlab("Percent of Community with Doubling Times <1hr") +
ylab("Predicted Avg. Min. Doubling Time (Hr)")
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
pCb <- ggplot(pred.150 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.500))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train Full/Test 150bp")
pCb
head(pred.150)
pCM <- ggplot(marg_df,
aes(x=trimlens,
y=value,
fill=variable,
group=variable)) +
geom_line(lwd=1.5) +
geom_line(aes(color=variable),lwd=1) +
geom_point(size=3,pch=21) +
scale_y_log10() +
scale_color_viridis_d(option="B",labels=c(150,450)) +
scale_fill_viridis_d(option="B",labels=c(150,450)) +
geom_smooth(aes(color=variable),fill="black",method='gam') +
theme_pubclean() +
labs(color="Test Gene Length", fill="Test Gene Length") +
theme(legend.position=c(0.1,0.2),
legend.background = element_rect(fill = NA)) +
xlab("Train Gene Length") +
ylab("Mean Square Prediction Error")
pCM
pCa <- ggplot(pred.150 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.150))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 150bp/Test 150bp")
pCa
pCM
pCM <- ggplot(marg_df,
aes(x=trimlens,
y=value,
fill=variable,
group=variable)) +
geom_line(lwd=1.5) +
geom_line(aes(color=variable),lwd=1) +
geom_point(size=3,pch=21) +
scale_y_log10() +
scale_color_viridis_d(option="B",labels=c(150,450)) +
scale_fill_viridis_d(option="B",labels=c(150,450)) +
# geom_smooth(aes(color=variable),fill="black",method='gam') +
theme_pubclean() +
labs(color="Test Gene Length", fill="Test Gene Length") +
theme(legend.position=c(0.1,0.2),
legend.background = element_rect(fill = NA)) +
xlab("Train Gene Length") +
ylab("Mean Square Prediction Error")
pCM
pCa <- ggplot(pred.150 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.150))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 150bp/Test 150bp")
pCa
pCb <- ggplot(pred.150 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.500))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 450bp/Test 150bp")
pCc <- ggplot(pred.500 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.500))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 450bp/Test 450bp")
fast_df <- data.frame(Fast=mix_df$Fast,
pred.150.150=pred.150[,6],
pred.450.150=pred.150[,7])
pCf <- ggplot(fast_df,
aes(x=Fast,y=exp(pred.150.150),group=Fast))  +
geom_violin(fill="gray",color="gray") +
geom_jitter(alpha=0.25,width=0.005) +
geom_boxplot(width=0.03,fill=rgb(0,0,0,0),color="white",outliers=F) +
theme_pubclean() +
scale_y_log10() +
xlab("Percent of Community with Doubling Times <1hr") +
ylab("Predicted Avg. Min. Doubling Time (Hr)")
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
pCc
head(pred.500)
pCc <- ggplot(pred.500 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.450))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 450bp/Test 450bp")
pCc
fast_df <- data.frame(Fast=mix_df$Fast,
pred.150.150=pred.150[,6],
pred.450.150=pred.150[,7])
pCf <- ggplot(fast_df,
aes(x=Fast,y=exp(pred.150.150),group=Fast))  +
geom_violin(fill="gray",color="gray") +
geom_jitter(alpha=0.25,width=0.005) +
geom_boxplot(width=0.03,fill=rgb(0,0,0,0),color="white",outliers=F) +
theme_pubclean() +
scale_y_log10() +
xlab("Percent of Community with Doubling Times <1hr") +
ylab("Predicted Avg. Min. Doubling Time (Hr)")
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
pCa <- ggplot(pred.150 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.150))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 150bp/Test 150bp")
pCa
pCb <- ggplot(pred.150 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.450))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 450bp/Test 150bp")
pCc <- ggplot(pred.500 %>% as.data.frame(),
aes(x=log(2)/d,y=log(2)/exp(d.450))) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.01,3.5)) +
scale_y_log10(limits=c(0.01,3.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Train 450bp/Test 450bp")
pCc
fast_df <- data.frame(Fast=mix_df$Fast,
pred.150.150=pred.150[,6],
pred.450.150=pred.150[,7])
pCf <- ggplot(fast_df,
aes(x=Fast,y=exp(pred.150.150),group=Fast))  +
geom_violin(fill="gray",color="gray") +
geom_jitter(alpha=0.25,width=0.005) +
geom_boxplot(width=0.03,fill=rgb(0,0,0,0),color="white",outliers=F) +
theme_pubclean() +
scale_y_log10() +
xlab("Percent of Community with Doubling Times <1hr") +
ylab("Predicted Avg. Min. Doubling Time (Hr)")
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
setwd("C:/Users/jlwei/OneDrive - Stony Brook University/truncate_gRodon/")
png(file="mixtures_performance.png",width=9,height=8,units="in",res=600)
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
dev.off()
pCM <- ggplot(marg_df,
aes(x=trimlens,
y=value,
fill=variable,
group=variable)) +
geom_line(lwd=1.5) +
geom_line(aes(color=variable),lwd=1) +
geom_point(size=3,pch=21) +
scale_y_log10() +
scale_color_viridis_d(option="B",labels=c(150,450)) +
scale_fill_viridis_d(option="B",labels=c(150,450)) +
# geom_smooth(aes(color=variable),fill="black",method='gam') +
theme_pubclean() +
labs(color="Test Gene Length", fill="Test Gene Length") +
theme(legend.position=c(0.05,0.3),
legend.background = element_rect(fill = NA)) +
xlab("Train Gene Length") +
ylab("Mean Square Prediction Error")
pCM
pCM <- ggplot(marg_df,
aes(x=trimlens,
y=value,
fill=variable,
group=variable)) +
geom_line(lwd=1.5) +
geom_line(aes(color=variable),lwd=1) +
geom_point(size=3,pch=21) +
scale_y_log10() +
scale_color_viridis_d(option="B",labels=c(150,450)) +
scale_fill_viridis_d(option="B",labels=c(150,450)) +
# geom_smooth(aes(color=variable),fill="black",method='gam') +
theme_pubclean() +
labs(color="Test Gene Length", fill="Test Gene Length") +
theme(legend.position=c(0.2,0.1),
legend.background = element_rect(fill = NA)) +
xlab("Train Gene Length") +
ylab("Mean Square Prediction Error")
pCM
pCM <- ggplot(marg_df,
aes(x=trimlens,
y=value,
fill=variable,
group=variable)) +
geom_line(lwd=1.5) +
geom_line(aes(color=variable),lwd=1) +
geom_point(size=3,pch=21) +
scale_y_log10() +
scale_color_viridis_d(option="B",labels=c(150,450)) +
scale_fill_viridis_d(option="B",labels=c(150,450)) +
# geom_smooth(aes(color=variable),fill="black",method='gam') +
theme_pubclean() +
labs(color="Test Gene Length", fill="Test Gene Length") +
theme(legend.position=c(0.2,0.15),
legend.background = element_rect(fill = NA)) +
xlab("Train Gene Length") +
ylab("Mean Square Prediction Error")
pCM
setwd("C:/Users/jlwei/OneDrive - Stony Brook University/truncate_gRodon/")
png(file="mixtures_performance.png",width=9,height=8,units="in",res=600)
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
dev.off()
pCM <- ggplot(marg_df,
aes(x=trimlens,
y=value,
fill=variable,
group=variable)) +
geom_line(lwd=1.5) +
geom_line(aes(color=variable),lwd=1) +
geom_point(size=3,pch=21) +
scale_y_log10() +
scale_color_viridis_d(option="B",labels=c(150,450)) +
scale_fill_viridis_d(option="B",labels=c(150,450)) +
# geom_smooth(aes(color=variable),fill="black",method='gam') +
theme_pubclean() +
labs(color="Test Gene Length", fill="Test Gene Length") +
theme(legend.position=c(0.8,0.5),
legend.background = element_rect(fill = NA)) +
xlab("Train Gene Length") +
ylab("Mean Square Prediction Error")
pCM
setwd("C:/Users/jlwei/OneDrive - Stony Brook University/truncate_gRodon/")
png(file="mixtures_performance.png",width=9,height=8,units="in",res=600)
ggarrange(ggarrange(pCM,pCf,
ncol=2,
labels=c("(a)","(b)"),hjust=0),
ggarrange(pCa,pCb,pCc,
ncol=3,
labels=c("(c)","(d)","(e)")),
nrow=2)
dev.off()
setwd("C:/Users/jlwei/OneDrive - Stony Brook University/truncate_gRodon/")
load("CodonStatistics_truncated_genes_start.rda")
load("GrowthRates_Madin.rda")
load("Accession2Species_Madin.rda")
load("CodonStatistics_Madin.rda")
load("CodonStatistics_simmeta150.rda")
mix_names <- read.delim("simmeta_mixture_abundances.tsv",sep="\t",header=F)
names(mix_names) <- c("SIM","File","RelAb")
cu <- cu %>% mutate_all(unlist)
cu$Accession <- cu$File %>% gsub(pattern="[.].*",replace="")
names(d)[1] <- "Species"
d <- d %>% as.data.frame(stringsAsFactors=F)
rownames(spp_acc) <- spp_acc$V1 %>% gsub(pattern="[.].*",replace="")
cu$Spp <- spp_acc[cu$Accession,"V2"]
cu$Species <- lapply(cu$Spp,rgrep,small_vec=d$Species) %>%
lapply("[",1) %>% unlist()
cu$Species[cu$Spp %in% d$Species] <- cu$Spp[cu$Spp %in% d$Species]
cu <- merge.easy(cu,d,key="Species") %>% subset(!is.na(Species))
cu$Fast <- cu$d<1
mix_df <- sim_df %>%
merge.easy(mix_names,.,key="SIM") %>%
mutate(Accession=substr(File,1,13)) %>%
merge.easy(.,cu,key="Accession") %>%
mutate(mu=log(2)/d,
mu.mmv2=log(2)/d.mmv2) %>%
subset(select=c(MILC,ENCprime,B,SCUO,MCB,d.150,
d,d.mmv2,Fast,SIM,mu.mmv2,mu,RelAb)) %>%
mutate(dW=log(d)*RelAb,
FW=Fast*RelAb) %>%
group_by(SIM) %>%
summarise(MILC=mean(MILC,na.rm=T),
ENCprime=mean(ENCprime,na.rm=T),
B=mean(B,na.rm=T),
SCUO=mean(SCUO,na.rm=T),
MCB=mean(MCB,na.rm=T),
d.150=mean(d.150,na.rm=T),
d.mmv2=mean(d.mmv2,na.rm=T),
d=exp(sum(dW)),
Fast=sum(FW)) %>%
mutate(Err.150=(log(d)-log(d.150))^2,
Err.mmv2=(log(d)-log(d.mmv2))^2) %>%
as.data.frame()
err_df <- mix_df %>%
subset(select=c(Err.150,Err.mmv2)) %>%
melt()
pS1 <- ggplot(err_df,
aes(x=variable,group=variable,y=value)) +
geom_violin(fill="gray",color="gray") +
geom_jitter(alpha=0.25,width=0.005) +
geom_boxplot(width=0.25,fill=rgb(0,0,0,0),color="white",outliers=F) +
theme_pubclean() +
scale_y_log10() +
scale_x_discrete(labels=c("Short-Read Mode","MMv2")) +
xlab("") +
ylab("Squared Prediction Error") +
stat_pwc() +
theme(axis.text.x=element_text(angle = 60, hjust = 1, vjust = 1))
pS1
pS2 <- ggplot(mix_df,
aes(x=Fast,y=d.150))  +
geom_point() +
theme_pubclean() +
scale_y_log10() +
geom_smooth(color="white",fill="black") +
xlab("Percent of Community with Doubling Times <1hr") +
ylab("Predicted Avg. Min. Doubling Time (Hr)")
pS3 <- ggplot(mix_df,
aes(x=log(2)/d,y=log(2)/d.150)) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.025,4.5)) +
scale_y_log10(limits=c(0.025,4.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Short-Read Mode")
pS4 <- ggplot(mix_df,
aes(x=log(2)/d,y=log(2)/d.mmv2)) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.025,4.5)) +
scale_y_log10(limits=c(0.025,4.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Metagenome Mode v2")
ggarrange(ggarrange(pS1,
pS2,
ncol=2,
widths=c(1,3),
labels=c("(a)","(b)"),
hjust=0),
ggarrange(pS3,
pS4,
ncol=2,
widths=c(1,1),
labels=c("(c)","(d)")),
nrow=2)
setwd("C:/Users/jlwei/OneDrive - Stony Brook University/truncate_gRodon/")
png(file="synthetic_metagenomes_performance.png",width=9,height=8,units="in",res=600)
ggarrange(ggarrange(pS1,
pS2,
ncol=2,
widths=c(1,3),
labels=c("(a)","(b)"),
hjust=0),
ggarrange(pS3,
pS4,
ncol=2,
widths=c(1,1),
labels=c("(c)","(d)")),
nrow=2)
dev.off()
setwd("C:/Users/jlwei/OneDrive - Stony Brook University/truncate_gRodon/")
png(file="synthetic_metagenomes_performance.png",width=7,height=9,units="in",res=600)
ggarrange(ggarrange(pS1,
pS2,
ncol=2,
widths=c(1,3),
labels=c("(a)","(b)"),
hjust=0),
ggarrange(pS3,
pS4,
ncol=2,
widths=c(1,1),
labels=c("(c)","(d)")),
nrow=2)
dev.off()
cor.test(mix_df$Fast,mix_df$d.150)
cor.test(mix_df$Fast,mix_df$d.150,method="kendall")
x <- cor.test(mix_df$Fast,mix_df$d.150)
x$p.value
x$p.value
pS2 <- ggplot(mix_df,
aes(x=Fast,y=d.150))  +
geom_point() +
theme_pubclean() +
scale_y_log10() +
geom_smooth(color="white",fill="black",method="gam") +
xlab("Percent of Community with Doubling Times <1hr") +
ylab("Predicted Avg. Min. Doubling Time (Hr)")
x <- cor.test(mix_df$Fast,mix_df$d.150)
x$p.value
pS3 <- ggplot(mix_df,
aes(x=log(2)/d,y=log(2)/d.150)) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.025,4.5)) +
scale_y_log10(limits=c(0.025,4.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Short-Read Mode")
pS4 <- ggplot(mix_df,
aes(x=log(2)/d,y=log(2)/d.mmv2)) +
geom_point(size=2,alpha=0.25,pch=21,fill="gray50") +
scale_x_log10(limits=c(0.025,4.5)) +
scale_y_log10(limits=c(0.025,4.5)) +
geom_abline(slope=1,intercept=0,lty=2,color="#357BA2FF",lwd=1.2) +
annotate("text",label="X=Y",angle=52,x=3,y=2,size=3.5,color="#357BA2FF") +
theme_pubclean() +
xlab("Actual Avg. Max. Growth Rate") +
ylab("Predicted Avg. Max. Growth Rate (1/Hr)") +
ggtitle("Metagenome Mode v2")
ggarrange(ggarrange(pS1,
pS2,
ncol=2,
widths=c(1,3),
labels=c("(a)","(b)"),
hjust=0),
ggarrange(pS3,
pS4,
ncol=2,
widths=c(1,1),
labels=c("(c)","(d)")),
nrow=2)
View(stat_data_list)
View(stat_data_extremo_list)
seq(-1,log10(5),0.03)
10^seq(-1,log10(5),0.03)
